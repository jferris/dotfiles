# ADD LOCAL CONFIGURATION HERE

# DO NOT EDIT BELOW THIS LINE
[push]
  default = current
[color]
  ui = auto
[alias]
  a = add --all
  aa = add --all
  ad = !git add -A && git diff --cached
  ap = commit --amend -C HEAD
  bd = !sh -c 'git branch -D $1 && git push origin :$1' -
  c = commit -v
  ca = commit --amend
  ci = commit -v
  co = checkout
  com = checkout master
  contrib = !sh -c 'git log $1 --pretty=format:%an | sort | uniq' -
  cp = cherry-pick
  create-branch = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
  delete-branch = !sh -c 'git push origin :refs/heads/$1 && git remote prune origin && git branch -D $1' -
  dic = diff --cached
  ignore-date = rebase origin/master --ignore-date
  merge-branch = !git checkout master && git merge @{-1}
  mm = !git checkout master && git merge @{-1}
  pr = !git push -u && hub pull-request
  pristine = !git remote prune origin && git gc --aggressive && git reset --hard && git checkout master && git clean -dfx && git stash clear && git pull
  ps = push
  rbc = !git rebase --continue && git status
  rbi = !git fetch origin && git rebase -i origin/master
  ready = !git rebase --interactive origin/master && git rebase origin/master --ignore-date && git push -f && git mm
  rebase-origin = !git fetch origin && git rebase origin/master
  st = status
  unwip = !test "`git log -n1 --pretty=format:%s`" = "wip" && git reset HEAD~1
  up = !git fetch origin && git rebase origin/master
  wip = !git add -A && git commit -m "wip"
[core]
  excludesfile = ~/.gitignore
  autocrlf = input
[difftool]
  prompt = false
[merge]
  ff = only
  tool = diffconflicts
[mergetool "diffconflicts"]
  cmd = diffconflicts mvim $BASE $LOCAL $REMOTE $MERGED
  trustExitCode = true
  keepBackup = false
[include]
  path = .gitconfig.local
[commit]
  template = ~/.gitmessage
